server:
  port: 8888 #config默认端口8888，不能在application.yml改，重新写个bootstrap.yml写
spring:
  boot:
    admin:
      client:
        url: http://localhost:8085
  zipkin:
    base-url: http://localhost:3344
  application:
    name: manager-config-8888
  cloud:
      config:
        label: master #github分支  localhost:8888/application-dept/master
        server:
          git:
            uri: https://github.com/wj159263/micro-service-config
            search-paths: manager-repo #github的目录
            #username: username  #账号密码写真实的快一些我觉得，不使用也能访问有点慢
            #password: password
#注册服务
eureka:
  client:
    registerWithEureka: true #服务注册开关
    fetchRegistry: true #服务发现开关
    serviceUrl: #Eureka客户端与Eureka服务端进行交互的地址，多个中间用逗号分隔
      #defaultZone: ${EUREKA_SERVER:http://localhost:50101/eureka/,http://localhost:50102/eureka/}
      defaultZone: http://localhost:7000/eureka  #注册服务的地址
       #defaultZone: http://eureka7000.com:7000/eureka/,http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/
  instance:
    prefer-ip-address:  true  #将自己的ip地址注册到Eureka服务中
    #ip-address: ${IP_ADDRESS:127.0.0.1} #手动写上，eureka就不用解析主机名，我们给他解析好了
    instance-id: ${spring.application.name}:${server.port} #指定实例id,别名

# eureka的info页面配置，build.version以$开头结尾，必须再parent工程中配置build
info:
  app.name: micro-service-config-8888
  company.name: xx.com
  build.artifactId: $project.artifactId$
  build.version: $project.version$



